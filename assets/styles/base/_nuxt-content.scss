@use 'nevo/settings' as *;

/*! purgecss start ignore */

.nuxt-content {
  display: flex;
  flex-direction: column;
  color: theme('colors', 'gray', '50');

  .icon.icon-link::before {
    content: '#';
    visibility: hidden;
    display: inline-block;
    font-weight: theme('weight', '400');
    color: theme('colors', 'gray', '400');
  }

  #defaults {
    visibility: hidden;
    margin: 0;
    padding: 0;
  }

  > h2 {
    font-size: theme('text', '8');
    font-weight: theme('weight', '700');
    letter-spacing: theme('tracking', '-1');
    margin: theme('spacing', '12') 0;

    .icon.icon-link::before {
      width: 40px;
      margin-left: -40px;
    }
  }

  > h3 {
    font-size: theme('text', '7');
    font-weight: theme('weight', '700');
    letter-spacing: theme('tracking', '-1');
    margin: theme('spacing', '10') 0;

    .icon.icon-link::before {
      width: 35px;
      margin-left: -35px;
    }
  }

  > h4 {
    font-size: theme('text', '5');
    font-weight: theme('weight', '700');
    letter-spacing: theme('tracking', '2');
    margin: theme('spacing', '10') 0;

    .icon.icon-link::before {
      width: 25px;
      margin-left: -25px;
    }
  }

  > h2,
  h3,
  h4 {
    &:hover {
      .icon.icon-link::before {
        visibility: visible;
      }
    }
  }

  > p {
    font-size: theme('text', '4');
    font-weight: theme('weight', '400');
    letter-spacing: theme('tracking', '2');
    line-height: theme('leading', '7');
    margin-bottom: theme('spacing', '12');

    code {
      letter-spacing: theme('tracking', '-2');
      padding: theme('spacing', '1') theme('spacing', '3');
      color: theme('colors', 'sky', '400');
      background: rgba(theme('colors', 'sky', '700'), 0.3);
      border-radius: theme('rounded', '3');
    }

    a {
      color: theme('colors', 'sky', '500');
      font-weight: theme('weight', '500');
    }

    strong {
      font-size: theme('text', '5');
      font-weight: theme('weight', '700');
    }

    em {
      color: theme('colors', 'gray', '400');
    }
  }

  code[class*='language-'],
  pre[class*='language-'] {
    background: theme('colors', 'dark', '500');
    color: theme('colors', 'gray', '50');
    font-family: theme('family', 'mono');
    font-size: theme('text', '2');
    font-weight: theme('weight', '400');
    line-height: theme('leading', '7');
    padding: theme('spacing', '12');
    margin-bottom: theme('spacing', '12');
    border-radius: theme('rounded', '5');
    overflow-x: auto;
    -ms-overflow-style: none;
    scrollbar-width: none;
    direction: ltr;
    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    tab-size: 4;
    hyphens: none;

    &::-webkit-scrollbar {
      display: none;
      width: 0;
      height: 0;
    }
  }
}

.language-css,
.language-scss {
  .token.comment {
    color: rgba(theme('colors', 'gray', '500'), 0.8);
  }

  .token.punctuation {
    color: rgba(theme('colors', 'gray', '400'), 0.8);
  }

  .token.keyword,
  .token.variable,
  .token.function {
    color: theme('colors', 'violet', '400');
  }

  .token.string,
  .token.operator {
    color: theme('colors', 'sky', '300');
  }
}

.language-bash {
  .token.comment {
    color: rgba(theme('colors', 'gray', '500'), 0.8);
  }

  .token.function,
  .token.class-name,
  .token.operator {
    color: theme('colors', 'violet', '400');
  }
}

.language-js {
  .token.comment {
    color: rgba(theme('colors', 'gray', '500'), 0.8);
  }

  .token.punctuation {
    color: rgba(theme('colors', 'gray', '400'), 0.8);
  }

  .token.keyword,
  .token.variable,
  .token.function {
    color: theme('colors', 'violet', '400');
  }

  .token.string {
    color: theme('colors', 'sky', '300');
  }
}

/*! purgecss end ignore */
